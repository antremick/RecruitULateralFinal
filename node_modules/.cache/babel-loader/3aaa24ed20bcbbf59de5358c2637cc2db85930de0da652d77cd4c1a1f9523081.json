{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyremick/Desktop/Anthony_Remick_RecruitU_Assessment /lateral_recruiting/src/components/FirmToFirm/FirmCategories.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FirmCategories({\n  user\n}) {\n  _s();\n  // Which categories the user has selected\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [professionals, setProfessionals] = useState([]);\n  // Which categories are “expanded” to show firm names\n  const [expandedCategories, setExpandedCategories] = useState({});\n\n  // Category data\n  const categories = [{\n    categoryName: \"Bulge Bracket Investment Banks (BBs)\",\n    firms: [\"JP Morgan\", \"Goldman Sachs\", \"Morgan Stanley\", \"Bank of America\", \"Citi\", \"Barclays\", \"UBS\", \"Deutsche Bank\"]\n  }, {\n    categoryName: \"In-Between-a-Banks (IBABs)\",\n    firms: [\"Wells Fargo\", \"RBC\", \"HSBC\", \"BNP Paribas\", \"Mizuho\", \"Nomura\", \"BMO\", \"CITIC\"]\n  }, {\n    categoryName: \"Elite Boutique Investment Banks (EBs)\",\n    firms: [\"Centerview\", \"Evercore\", \"Guggenheim\", \"Lazard\", \"Moelis\", \"Perella Weinberg\", \"PJT Partners\", \"Qatalyst\", \"Rothschild\"]\n  }, {\n    categoryName: \"Up-and-Coming Elite Boutique Investment Banks (UCEBs)\",\n    firms: [\"LionTree Advisors\", \"Zaoui & Co.\", \"Robey Warshaw\", \"Lakeside Capital Advisers\", \"Dyal Co.\"]\n  }, {\n    categoryName: \"Middle Market Banks (MMs)\",\n    firms: [\"Baird\", \"Brown Gibbons Lang & Company\", \"Cowen\", \"Harris Williams\", \"Houlihan Lokey\", \"Janney\", \"Jefferies\", \"JMP\", \"Lincoln International\", \"Macquarie\", \"Needham\", \"Oppenheimer\", \"Piper Sandler\", \"PJ Solomon\", \"Raymond James\", \"Stephens\", \"Stifel\", \"Truist\", \"Wedbush\", \"William Blair\"]\n  }, {\n    categoryName: \"Industry-Specific Boutiques (ISBs)\",\n    firms: [\"Leerink\", \"Ziegler\", \"FT Partners\", \"Raine Group\", \"Allen & Co.\", \"Seabury\", \"Telsey Advisory Group\"]\n  }, {\n    categoryName: \"Other Banks (Merchant Banks, Hybrid Firms, and KPOs)\",\n    firms: [\"BDT Capital Partners\", \"Tudor Pickering Holt & Co.\", \"Raine Group\", \"Three Ocean Partners\", \"Lepe Partners\"]\n  }];\n  const handleToggleCategory = cat => {\n    setSelectedCategories(prev => prev.includes(cat) ? prev.filter(c => c !== cat) : [...prev, cat]);\n  };\n  // Toggle whether a category is selected\n  const handleSelectCategory = categoryName => {\n    setSelectedCategories(prev => {\n      // If it’s already selected, remove it\n      if (prev.includes(categoryName)) {\n        return prev.filter(cat => cat !== categoryName);\n      }\n      // Otherwise, add it\n      return [...prev, categoryName];\n    });\n  };\n\n  // Toggle whether a category is expanded to show firm names\n  const handleToggleMoreInfo = categoryName => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [categoryName]: !prev[categoryName]\n    }));\n  };\n  const handleContinue = async () => {\n    try {\n      // Build the query string: e.g. ?previous_company=McKinsey&school=Harvard&current_company=Evercore&current_company=Lazard\n      const params = new URLSearchParams();\n      params.append(\"previous_company\", user.currentCompany);\n      if (user.university) {\n        params.append(\"school\", user.university);\n      }\n      // Suppose each \"category\" is actually a target company name\n      // or maybe you map categories -> array of actual companies\n      selectedCategories.forEach(company => {\n        params.append(\"current_company\", company);\n      });\n      const response = await fetch(`/api/professionals?${params.toString()}`, {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setProfessionals(data); // store the professionals in state\n      console.log(\"Fetched professionals:\", data);\n    } catch (error) {\n      console.error(\"Error fetching professionals:\", error);\n      alert(\"Failed to fetch professionals\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Firm Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.subtitle,\n      children: \"Select any categories you\\u2019re interested in. Click \\u201CMore Info\\u201D to see example firms in each category.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: categories.map(cat => {\n        const isSelected = selectedCategories.includes(cat.categoryName);\n        const isExpanded = expandedCategories[cat.categoryName] || false;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.categoryCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.cardHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                ...styles.categoryButton,\n                backgroundColor: isSelected ? \"#4a67f2\" : \"#fff\",\n                color: isSelected ? \"#fff\" : \"#333\"\n              },\n              onClick: () => handleSelectCategory(cat.categoryName),\n              children: [isSelected ? \"Selected\" : \"Select\", \": \", cat.categoryName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.infoButton,\n              onClick: () => handleToggleMoreInfo(cat.categoryName),\n              children: isExpanded ? \"Hide Info\" : \"More Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: styles.firmList,\n            children: cat.firms.map(firm => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: styles.firmItem,\n              children: firm\n            }, firm, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, cat.categoryName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleContinue,\n      children: \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), professionals.map(prof => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [prof.name, \" \\u2014 \", prof.current_company]\n      }, prof.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(FirmCategories, \"jGG34+OhFot7fcYHpzqUIfjJEgg=\");\n_c = FirmCategories;\nconst styles = {\n  container: {\n    maxWidth: \"800px\",\n    margin: \"2rem auto\",\n    padding: \"1rem\",\n    fontFamily: \"Arial, sans-serif\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"0.5rem\"\n  },\n  subtitle: {\n    textAlign: \"center\",\n    marginBottom: \"1.5rem\",\n    color: \"#555\"\n  },\n  categoryCard: {\n    marginBottom: \"1.5rem\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"6px\",\n    padding: \"1rem\",\n    backgroundColor: \"#fff\"\n  },\n  cardHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"0.75rem\"\n  },\n  categoryButton: {\n    padding: \"0.75rem 1rem\",\n    fontSize: \"1rem\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontWeight: 500,\n    flex: 1,\n    marginRight: \"1rem\",\n    transition: \"background-color 0.2s ease\"\n  },\n  infoButton: {\n    padding: \"0.75rem 1rem\",\n    fontSize: \"0.9rem\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\"\n  },\n  firmList: {\n    listStyle: \"disc\",\n    marginLeft: \"1.5rem\"\n  },\n  firmItem: {\n    marginBottom: \"0.25rem\"\n  },\n  continueButton: {\n    display: \"block\",\n    margin: \"2rem auto 0\",\n    padding: \"0.75rem 1.5rem\",\n    backgroundColor: \"#4a67f2\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"1rem\",\n    fontWeight: 500\n  }\n};\nexport default FirmCategories;\nvar _c;\n$RefreshReg$(_c, \"FirmCategories\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FirmCategories","user","_s","selectedCategories","setSelectedCategories","professionals","setProfessionals","expandedCategories","setExpandedCategories","categories","categoryName","firms","handleToggleCategory","cat","prev","includes","filter","c","handleSelectCategory","handleToggleMoreInfo","handleContinue","params","URLSearchParams","append","currentCompany","university","forEach","company","response","fetch","toString","method","ok","Error","statusText","data","json","console","log","error","alert","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","map","isSelected","isExpanded","categoryCard","cardHeader","categoryButton","backgroundColor","color","onClick","infoButton","firmList","firm","firmItem","marginTop","prof","name","current_company","id","_c","maxWidth","margin","padding","fontFamily","textAlign","marginBottom","border","borderRadius","display","justifyContent","alignItems","fontSize","cursor","fontWeight","flex","marginRight","transition","listStyle","marginLeft","continueButton","$RefreshReg$"],"sources":["/Users/anthonyremick/Desktop/Anthony_Remick_RecruitU_Assessment /lateral_recruiting/src/components/FirmToFirm/FirmCategories.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction FirmCategories({user}) {\n  // Which categories the user has selected\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [professionals, setProfessionals] = useState([]);\n  // Which categories are “expanded” to show firm names\n  const [expandedCategories, setExpandedCategories] = useState({});\n\n  // Category data\n  const categories = [\n    {\n      categoryName: \"Bulge Bracket Investment Banks (BBs)\",\n      firms: [\n        \"JP Morgan\",\n        \"Goldman Sachs\",\n        \"Morgan Stanley\",\n        \"Bank of America\",\n        \"Citi\",\n        \"Barclays\",\n        \"UBS\",\n        \"Deutsche Bank\",\n      ],\n    },\n    {\n      categoryName: \"In-Between-a-Banks (IBABs)\",\n      firms: [\n        \"Wells Fargo\",\n        \"RBC\",\n        \"HSBC\",\n        \"BNP Paribas\",\n        \"Mizuho\",\n        \"Nomura\",\n        \"BMO\",\n        \"CITIC\",\n      ],\n    },\n    {\n      categoryName: \"Elite Boutique Investment Banks (EBs)\",\n      firms: [\n        \"Centerview\",\n        \"Evercore\",\n        \"Guggenheim\",\n        \"Lazard\",\n        \"Moelis\",\n        \"Perella Weinberg\",\n        \"PJT Partners\",\n        \"Qatalyst\",\n        \"Rothschild\",\n      ],\n    },\n    {\n      categoryName: \"Up-and-Coming Elite Boutique Investment Banks (UCEBs)\",\n      firms: [\n        \"LionTree Advisors\",\n        \"Zaoui & Co.\",\n        \"Robey Warshaw\",\n        \"Lakeside Capital Advisers\",\n        \"Dyal Co.\",\n      ],\n    },\n    {\n      categoryName: \"Middle Market Banks (MMs)\",\n      firms: [\n        \"Baird\",\n        \"Brown Gibbons Lang & Company\",\n        \"Cowen\",\n        \"Harris Williams\",\n        \"Houlihan Lokey\",\n        \"Janney\",\n        \"Jefferies\",\n        \"JMP\",\n        \"Lincoln International\",\n        \"Macquarie\",\n        \"Needham\",\n        \"Oppenheimer\",\n        \"Piper Sandler\",\n        \"PJ Solomon\",\n        \"Raymond James\",\n        \"Stephens\",\n        \"Stifel\",\n        \"Truist\",\n        \"Wedbush\",\n        \"William Blair\",\n      ],\n    },\n    {\n      categoryName: \"Industry-Specific Boutiques (ISBs)\",\n      firms: [\n        \"Leerink\",\n        \"Ziegler\",\n        \"FT Partners\",\n        \"Raine Group\",\n        \"Allen & Co.\",\n        \"Seabury\",\n        \"Telsey Advisory Group\",\n      ],\n    },\n    {\n      categoryName: \"Other Banks (Merchant Banks, Hybrid Firms, and KPOs)\",\n      firms: [\n        \"BDT Capital Partners\",\n        \"Tudor Pickering Holt & Co.\",\n        \"Raine Group\",\n        \"Three Ocean Partners\",\n        \"Lepe Partners\",\n      ],\n    },\n  ];\n\n const handleToggleCategory = (cat) => {\n        setSelectedCategories((prev) =>\n        prev.includes(cat) ? prev.filter((c) => c !== cat) : [...prev, cat]\n        );\n    };\n  // Toggle whether a category is selected\n  const handleSelectCategory = (categoryName) => {\n    setSelectedCategories((prev) => {\n      // If it’s already selected, remove it\n      if (prev.includes(categoryName)) {\n        return prev.filter((cat) => cat !== categoryName);\n      }\n      // Otherwise, add it\n      return [...prev, categoryName];\n    });\n  };\n\n  // Toggle whether a category is expanded to show firm names\n  const handleToggleMoreInfo = (categoryName) => {\n    setExpandedCategories((prev) => ({\n      ...prev,\n      [categoryName]: !prev[categoryName],\n    }));\n  };\n\n\n    const handleContinue = async () => {\n      try {\n        // Build the query string: e.g. ?previous_company=McKinsey&school=Harvard&current_company=Evercore&current_company=Lazard\n        const params = new URLSearchParams();\n\n        params.append(\"previous_company\", user.currentCompany);\n        if (user.university) {\n          params.append(\"school\", user.university);\n        }\n        // Suppose each \"category\" is actually a target company name\n        // or maybe you map categories -> array of actual companies\n        selectedCategories.forEach((company) => {\n          params.append(\"current_company\", company);\n        });\n\n        const response = await fetch(\n          `/api/professionals?${params.toString()}`,\n          {\n            method: \"GET\",\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\n            `Network response was not ok: ${response.statusText}`\n          );\n        }\n        const data = await response.json();\n        setProfessionals(data); // store the professionals in state\n        console.log(\"Fetched professionals:\", data);\n      } catch (error) {\n        console.error(\"Error fetching professionals:\", error);\n        alert(\"Failed to fetch professionals\");\n      }\n    };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>Firm Categories</h1>\n      <p style={styles.subtitle}>\n        Select any categories you’re interested in. Click “More Info” to see\n        example firms in each category.\n      </p>\n\n      <div>\n        {categories.map((cat) => {\n          const isSelected = selectedCategories.includes(cat.categoryName);\n          const isExpanded = expandedCategories[cat.categoryName] || false;\n\n          return (\n            <div key={cat.categoryName} style={styles.categoryCard}>\n              <div style={styles.cardHeader}>\n                {/* Big button to select/unselect category */}\n                <button\n                  style={{\n                    ...styles.categoryButton,\n                    backgroundColor: isSelected ? \"#4a67f2\" : \"#fff\",\n                    color: isSelected ? \"#fff\" : \"#333\",\n                  }}\n                  onClick={() => handleSelectCategory(cat.categoryName)}\n                >\n                  {isSelected ? \"Selected\" : \"Select\"}: {cat.categoryName}\n                </button>\n\n                {/* Button to toggle the “more info” about the category */}\n                <button\n                  style={styles.infoButton}\n                  onClick={() => handleToggleMoreInfo(cat.categoryName)}\n                >\n                  {isExpanded ? \"Hide Info\" : \"More Info\"}\n                </button>\n              </div>\n\n              {/* Conditionally render the list of firms if expanded */}\n              {isExpanded && (\n                <ul style={styles.firmList}>\n                  {cat.firms.map((firm) => (\n                    <li key={firm} style={styles.firmItem}>\n                      {firm}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      <button onClick={handleContinue}>Continue</button>\n\n      <div style={{ marginTop: \"2rem\" }}>\n        <h3>Results:</h3>\n        {professionals.map((prof) => (\n          <p key={prof.id}>\n            {prof.name} — {prof.current_company}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    maxWidth: \"800px\",\n    margin: \"2rem auto\",\n    padding: \"1rem\",\n    fontFamily: \"Arial, sans-serif\",\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"0.5rem\",\n  },\n  subtitle: {\n    textAlign: \"center\",\n    marginBottom: \"1.5rem\",\n    color: \"#555\",\n  },\n  categoryCard: {\n    marginBottom: \"1.5rem\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"6px\",\n    padding: \"1rem\",\n    backgroundColor: \"#fff\",\n  },\n  cardHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"0.75rem\",\n  },\n  categoryButton: {\n    padding: \"0.75rem 1rem\",\n    fontSize: \"1rem\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontWeight: 500,\n    flex: 1,\n    marginRight: \"1rem\",\n    transition: \"background-color 0.2s ease\",\n  },\n  infoButton: {\n    padding: \"0.75rem 1rem\",\n    fontSize: \"0.9rem\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n  },\n  firmList: {\n    listStyle: \"disc\",\n    marginLeft: \"1.5rem\",\n  },\n  firmItem: {\n    marginBottom: \"0.25rem\",\n  },\n  continueButton: {\n    display: \"block\",\n    margin: \"2rem auto 0\",\n    padding: \"0.75rem 1.5rem\",\n    backgroundColor: \"#4a67f2\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n  },\n};\n\nexport default FirmCategories;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}